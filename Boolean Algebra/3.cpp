/* Create test functions to check the accuracy of dec2bin as well as bin2dec. Test functions generate 1000 random 
numbers using rand() function. The binary number generated using dec2bin is compared with binary number generated 
by std::bitset::bitset().Similarly compare the output of bin2dec with std::bitset::to_ulong(). 
Report the failure count in both cases.*/


#include<iostream>
#include<bitset>
#include<ctime>
#include<cstdlib>

using namespace std;

bitset<32> dec2bin(unsigned int dec)
{
	bitset<32> bin32;
	int i = 0;
	while(dec!=0)
	{
		if(dec&1)
			bin32.set(i);
		i++;
		dec/=2;			
	}		
	return bin32;
}


int test_dec2bin()
{
	int incorrect = 0;
	srand(time(NULL));
	for(int i=0;i<1000;i++)
	{
		int num = rand();						//generating random numbers
		bitset<32> test = dec2bin(num);			//generating binary using customn dec2bin function
		string stest = test.to_string();		// converting binary number
		bitset<32> bs = num;					//generating binary using library function
		string actual = bs.to_string();			//converting binary to string
		if(actual!=stest)						// comparing binary numbers generated using library and custom functions
			incorrect++;
		 	
	}
	return incorrect;
	
}

unsigned int bin2dec(bitset <32> bin32)
{
	unsigned int num = 0;
	unsigned int pow2 = 1;
	for(int i=0;i<32;i++)
	{
		if(bin32[i] == 1)
			num += pow2;
		pow2 <<= 1;
	}
	return num;
}



int test_bin2dec()
{	
	int incorrect = 0;
	srand(time(NULL));
	for(int i=0;i<1000;i++)
	{
		unsigned int random_num = rand();
		bitset<32> random_binary = random_num;
		unsigned int test = bin2dec(random_binary);	
		unsigned int actual = random_binary.to_ulong();

		if(test!=actual)
			incorrect++;
	}
	return incorrect;
}	

int main()
{	
	cout<<"Incorrect numbers generated by bin2dec: "<<test_bin2dec()<<endl;
	cout<<"Incorrect numbers generated by dec2bin: "<<test_dec2bin()<<endl;
	
}
